{
    "TS.CREATE": {
        "summary": "Create a new time-series",
        "complexity": "O(1)",
        "arguments": [
            {
            "name": "key",
            "type": "key"
            },
            {
            "type": "integer",
            "command": "RETENTION",
            "name": "retentionTime",
            "optional": true
            },
            {
            "type": "enum",
            "command": "ENCODING",
            "enum": [
                "UNCOMPRESSED",
                "COMPRESSED"
            ],
            "optional": true
            },
            {
            "type": "integer",
            "command": "CHUNK_SIZE",
            "name": "size",
            "optional": true
            },
            {
            "type": "enum",
            "command": "DUPLICATE_POLICY",
            "name": "policy",
            "enum": [
                "BLOCK",
                "FIRST",
                "LAST",
                "MIN",
                "MAX",
                "SUM"
            ],
            "optional": true
            },
            {
            "command": "LABELS",
            "name": [
                "label",
                "value"
            ],
            "type": [
                "string",
                "string"
            ],
            "multiple": true,
            "optional": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.DEL": {
        "summary": "Delete samples between two timestamps for a given key",
        "complexity": "O(N) where N is the number of data points that will be removed",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "from_timestamp",
                "type": "integer"
            },
            {
                "name": "to_timestamp",
                "type": "integer"
            }
        ],
        "since": "1.6.0",
        "group": "timeseries"
    },
    "TS.ALTER": {
        "summary": "Update the retention, labels of an existing key",
        "complexity": "O(N) where N is the number of labels requested to update",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "type": "integer",
                "command": "RETENTION",
                "name": "retentionTime",
                "optional": true
            },
            {
                "command": "LABELS",
                "name": [
                    "label",
                    "value"
                ],
                "type": [
                    "string",
                    "string"
                ],
                "multiple": true,
                "optional": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.ADD": {
        "summary": "Append a new sample to the series. If the series has not been created yet with TS.CREATE it will be automatically created.",
        "complexity": "O(M) when M is the amount of compaction rules or O(1) with no compaction",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "timestamp",
                "type": "integer"
            },
            {
                "name": "value",
                "type": "double"
            },
            {
                "type": "integer",
                "command": "RETENTION",
                "name": "retentionTime",
                "optional": true
            },
            {
                "type": "enum",
                "command": "ENCODING",
                "enum": [
                    "UNCOMPRESSED",
                    "COMPRESSED"
                ],
                "optional": true
            },
            {
                "type": "integer",
                "command": "CHUNK_SIZE",
                "name": "size",
                "optional": true
            },
            {
                "type": "enum",
                "command": "ON_DUPLICATE",
                "name": "policy",
                "enum": [
                    "BLOCK",
                    "FIRST",
                    "LAST",
                    "MIN",
                    "MAX",
                    "SUM"
                ],
                "optional": true
            },
            {
                "command": "LABELS",
                "name": [
                    "label",
                    "value"
                ],
                "type": [
                    "string",
                    "string"
                ],
                "multiple": true,
                "optional": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.MADD": {
        "summary": "Append new samples to a list of series",
        "complexity": "O(N*M) when N is the amount of series updated and M is the amount of compaction rules or O(N) with no compaction",
        "arguments": [{
                "name": [
                    "key",
                    "timestamp",
                    "value"
                ],
                "type": [
                    "key",
                    "integer",
                    "double"
                ],
                "multiple": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.INCRBY": {
        "summary": "Creates a new sample that increments the latest sample's value",
        "complexity": "O(M) when M is the amount of compaction rules or O(1) with no compaction",
        "arguments": [
            {
            "name": "key",
            "type": "key"
            },
            {
            "name": "value",
            "type": "double"
            },
            {
                "name": "timestamp",
                "type": "integer",
                "optional": true
            },            
            {
            "type": "integer",
            "command": "RETENTION",
            "name": "retentionTime",
            "optional": true
            },
            {
            "type": "enum",
            "enum": [
                "UNCOMPRESSED"
            ],
            "optional": true
            },
            {
            "type": "integer",
            "command": "CHUNK_SIZE",
            "name": "size",
            "optional": true
            },
            {
            "command": "LABELS",
            "name": [
                "label",
                "value"
            ],
            "type": [
                "string",
                "string"
            ],
            "multiple": true,
            "optional": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.DECRBY": {
        "summary": "Creates a new sample that decrements the latest sample's value",
        "complexity": "O(M) when M is the amount of compaction rules or O(1) with no compaction",
        "arguments": [
            {
            "name": "key",
            "type": "key"
            },
            {
            "name": "value",
            "type": "double"
            },
            {
                "name": "timestamp",
                "type": "integer",
                "optional": true
            },
            {
            "type": "integer",
            "command": "RETENTION",
            "name": "retentionTime",
            "optional": true
            },
            {
            "type": "enum",
            "enum": [
                "UNCOMPRESSED"
            ],
            "optional": true
            },
            {
            "type": "integer",
            "command": "CHUNK_SIZE",
            "name": "size",
            "optional": true
            },
            {
            "command": "LABELS",
            "name": [
                "label",
                "value"
            ],
            "type": [
                "string",
                "string"
            ],
            "multiple": true,
            "optional": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.CREATERULE": {
        "summary": "Create a compaction rule",
        "complexity": "O(1)",
        "arguments": [{
                "name": "sourceKey",
                "type": "key"
            },
            {
                "name": "destKey",
                "type": "key"
            },
            {
                "type": "enum",
                "command": "AGGREGATION",
                "name": "aggregationType",
                "enum": [
                    "avg",
                    "sum",
                    "min",
                    "max",
                    "range",
                    "count",
                    "first",
                    "last",
                    "std.p",
                    "std.s",
                    "var.p",
                    "var.s"
                ]
            },
            {
                "name": "timeBucket",
                "type": "integer"
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.DELETERULE": {
        "summary": "Delete a compaction rule",
        "complexity": "O(1)",
        "arguments": [{
                "name": "sourceKey",
                "type": "key"
            },
            {
                "name": "destKey",
                "type": "key"
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.RANGE": {
        "summary": "Query a range in forward direction",
        "complexity": "O(n/m+k) where n = Number of data points, m = Chunk size (data points per chunk), k = Number of data points that are in the requested range",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "fromTimestamp",
                "type": "integer"
            },
            {
                "name": "toTimestamp",
                "type": "integer"
            },
            {
                "command": "FILTER_BY_TS",
                "name": "Timestamp",
                "type": "integer",
                "multiple": true,
                "optional": true
            },
            {
                "command": "FILTER_BY_VALUE",
                "name": [
                    "min",
                    "max"
                ],
                "type": [
                    "double",
                    "double"
                ],
                "optional": true
            },
            {
                "command": "COUNT",
                "name": "count",
                "type": "integer",
                "optional": true
            },
            {
                "command": "ALIGN",
                "name": "value",
                "type": "integer",
                "optional": true
            },
            {
                "name": "aggregation",
                "type": "block",
                "optional": true,
                "block": [
                  {
                    "command": "AGGREGATION",
                    "name": "aggregationType",
                    "type": "enum",
                    "enum": [
                      "avg",
                      "sum",
                      "min",
                      "max",
                      "range",
                      "count",
                      "first",
                      "last",
                      "std.p",
                      "std.s",
                      "var.p",
                      "var.s"
                    ]
                  },
                  {
                    "name": "timeBucket",
                    "type": "integer"
                  }
                ]
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.REVRANGE": {
        "summary": "Query a range in reverse direction",
        "complexity": "O(n/m+k) where n = Number of data points, m = Chunk size (data points per chunk), k = Number of data points that are in the requested range",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "fromTimestamp",
                "type": "integer"
            },
            {
                "name": "toTimestamp",
                "type": "integer"
            },
            {
                "command": "FILTER_BY_TS",
                "name": "Timestamp",
                "type": "integer",
                "multiple": true,
                "optional": true
            },
            {
                "command": "FILTER_BY_VALUE",
                "name": [
                    "min",
                    "max"
                ],
                "type": [
                    "double",
                    "double"
                ],
                "optional": true
            },
            {
                "command": "COUNT",
                "name": "count",
                "type": "integer",
                "optional": true
            },
            {
                "command": "ALIGN",
                "name": "value",
                "type": "integer",
                "optional": true
            },
            {
                "name": "aggregation",
                "type": "block",
                "optional": true,
                "block": [
                  {
                    "command": "AGGREGATION",
                    "name": "aggregationType",
                    "type": "enum",
                    "enum": [
                      "avg",
                      "sum",
                      "min",
                      "max",
                      "range",
                      "count",
                      "first",
                      "last",
                      "std.p",
                      "std.s",
                      "var.p",
                      "var.s"
                    ]
                  },
                  {
                    "name": "timeBucket",
                    "type": "integer"
                  }
                ]
            }
        ],
        "since": "1.4.0",
        "group": "timeseries"
    },
    "TS.MRANGE": {
        "summary": "Query a range across multiple time-series by filters in forward direction",
        "complexity": "O(n/m+k) where n = Number of data points, m = Chunk size (data points per chunk), k = Number of data points that are in the requested ranges",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "fromTimestamp",
                "type": "integer"
            },
            {
                "name": "toTimestamp",
                "type": "integer"
            },
            {
                "command": "FILTER_BY_TS",
                "name": "Timestamp",
                "type": "integer",
                "multiple": true,
                "optional": true
            },
            {
                "command": "FILTER_BY_VALUE",
                "name": [
                    "min",
                    "max"
                ],
                "type": [
                    "double",
                    "double"
                ],
                "optional": true
            },
            {
                "type": "enum",
                "enum": [
                    "WITHLABELS",
                    "SELECTED_LABELS label1 ..."
                ],
                "optional": true
            },
            {
                "command": "COUNT",
                "name": "count",
                "type": "integer",
                "optional": true
            },
            {
                "command": "ALIGN",
                "name": "value",
                "type": "integer",
                "optional": true
            },
            {
                "name": "aggregation",
                "type": "block",
                "optional": true,
                "block": [
                  {
                    "command": "AGGREGATION",
                    "name": "aggregationType",
                    "type": "enum",
                    "enum": [
                      "avg",
                      "sum",
                      "min",
                      "max",
                      "range",
                      "count",
                      "first",
                      "last",
                      "std.p",
                      "std.s",
                      "var.p",
                      "var.s"
                    ]
                  },
                  {
                    "name": "timeBucket",
                    "type": "integer"
                  }
                ]
            },
            {
                "command": "FILTER",
                "type": "enum",
                "enum": [
                    "l=v",
                    "l!=v",
                    "l=",
                    "l!=",
                    "l=(v1,v2,...)",
                    "l!=(v1,v2,...)"
                ],
                "multiple": true
            },
            {
                "command": "GROUPBY",
                "name": [
                    "label",
                    "REDUCE",
                    "reducer"
                ],
                "type": [
                    "string",
                    "string",
                    "string"
                ],
                "optional": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.MREVRANGE": {
        "summary": "Query a range across multiple time-series by filters in reverse direction",
        "complexity": "O(n/m+k) where n = Number of data points, m = Chunk size (data points per chunk), k = Number of data points that are in the requested ranges",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "fromTimestamp",
                "type": "integer"
            },
            {
                "name": "toTimestamp",
                "type": "integer"
            },
            {
                "command": "FILTER_BY_TS",
                "name": "Timestamp",
                "type": "integer",
                "multiple": true,
                "optional": true
            },
            {
                "command": "FILTER_BY_VALUE",
                "name": [
                    "min",
                    "max"
                ],
                "type": [
                    "double",
                    "double"
                ],
                "optional": true
            },
            {
                "type": "enum",
                "enum": [
                    "WITHLABELS",
                    "SELECTED_LABELS label1 ..."
                ],
                "optional": true
            },
            {
                "command": "COUNT",
                "name": "count",
                "type": "integer",
                "optional": true
            },
            {
                "command": "ALIGN",
                "name": "value",
                "type": "integer",
                "optional": true
            },
            {
                "name": "aggregation",
                "type": "block",
                "optional": true,
                "block": [
                  {
                    "command": "AGGREGATION",
                    "name": "aggregationType",
                    "type": "enum",
                    "enum": [
                      "avg",
                      "sum",
                      "min",
                      "max",
                      "range",
                      "count",
                      "first",
                      "last",
                      "std.p",
                      "std.s",
                      "var.p",
                      "var.s"
                    ]
                  },
                  {
                    "name": "timeBucket",
                    "type": "integer"
                  }
                ]
            },
            {
                "command": "FILTER",
                "type": "enum",
                "enum": [
                    "l=v",
                    "l!=v",
                    "l=",
                    "l!=",
                    "l=(v1,v2,...)",
                    "l!=(v1,v2,...)"
                ],
                "multiple": true
            },
            {
                "command": "GROUPBY",
                "name": [
                    "label",
                    "REDUCE",
                    "reducer"
                ],
                "type": [
                    "string",
                    "string",
                    "string"
                ],
                "optional": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.GET": {
        "summary": "Get the last sample",
        "complexity": "O(1)",
        "arguments": [{
                "name": "key",
                "type": "key"
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.MGET": {
        "summary": "Get the last samples matching the specific filter",
        "complexity": "O(n) where n is the number of time-series that match the filters",
        "arguments": [{
                "type": "enum",
                "enum": [
                    "WITHLABELS",
                    "SELECTED_LABELS label1 ..."
                ],
                "optional": true
            },
            {
                "command": "FILTER",
                "type": "enum",
                "enum": [
                    "l=v",
                    "l!=v",
                    "l=",
                    "l!=",
                    "l=(v1,v2,...)",
                    "l!=(v1,v2,...)"
                ],
                "multiple": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.INFO": {
        "summary": "Returns information and statistics on the time-series",
        "complexity": "O(1)",
        "arguments": [{
                "name": "key",
                "type": "key"
            },
            {
                "name": "DEBUG",
                "type": "string",
                "optional": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    },
    "TS.QUERYINDEX": {
        "summary": "Get all the keys matching the filter list",
        "complexity": "O(n) where n is the number of time-series that match the filters",
        "arguments": [
            {
                "type": "enum",
                "enum": [
                    "l=v",
                    "l!=v",
                    "l=",
                    "l!=",
                    "l=(v1,v2,...)",
                    "l!=(v1,v2,...)"
                ],
                "multiple": true
            }
        ],
        "since": "1.0.0",
        "group": "timeseries"
    }
}