name: Upload Artifacts to S3
description: |
  Uploads module artifacts to S3 bucket.

inputs:
  github-ref:
    description: 'GitHub ref'
    required: true
  osnick:
    description: 'OS Nickname'
    required: false
    default: ''

runs:
  using: composite
  steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::168085023892:role/GitHubRedisTimeSeriesS3Upload
        role-session-name: GitHub_to_AWS_S3_Upload
        aws-region: ${{ env.AWS_REGION }}
    - name: Configure AWS credentials and upload artifcats # todo - use aws role instead
      shell: bash
      run: |
          echo ::group::install aws cli
          python3 -m venv .aws-cli-venv && source .aws-cli-venv/bin/activate &&
          pip3 install --upgrade pip && pip3 install --no-cache-dir awscli && rm -rf /var/cache/apk/*
          echo ::endgroup::

          # Variables from the workflow
          echo ::group::use assume role
            OUT=$(aws sts assume-role --role-arn arn:aws:iam::168085023892:role/GitHubRedisTimeSeriesS3Upload --role-session-name GitHub_to_AWS_S3_Upload);\
            export AWS_ACCESS_KEY_ID=$(echo $OUT | jq -r '.Credentials''.AccessKeyId');\
            export AWS_SECRET_ACCESS_KEY=$(echo $OUT | jq -r '.Credentials''.SecretAccessKey');\
            export AWS_SESSION_TOKEN=$(echo $OUT | jq -r '.Credentials''.SessionToken');
          echo ::endgroup::


          export AWS_REGION="us-east-1"
          # Check if the required environment variables are set
          if [ -z "$AWS_ACCESS_KEY_ID" ] || [ -z "$AWS_SECRET_ACCESS_KEY" ] || [ -z "$AWS_REGION" ]; then
            echo "Missing AWS credentials or region configuration."
            exit 1
          fi
          # Configure AWS CLI with provided credentials and region
          echo "Configuring AWS CLI with access keys..."
          aws configure set aws_access_key_id "$AWS_ACCESS_KEY_ID"
          aws configure set aws_secret_access_key "$AWS_SECRET_ACCESS_KEY"
          aws configure set region "$AWS_REGION"

          echo ::group::upload artifacts
            SNAPSHOT=1 SHOW=1 VERBOSE=1 ./sbin/upload-artifacts
          echo ::endgroup::
          echo ::group::upload staging release
            RELEASE=1 SHOW=1 STAGING=1 VERBOSE=1 ./sbin/upload-artifacts
          echo ::endgroup::
          
          echo ::group::upload production release
            # todo: trigger this manually instead
            if [[ "${{ inputs.github-ref}}" != 'refs/heads/master' ]]; then
              RELEASE=1 SHOW=1 VERBOSE=1 ./sbin/upload-artifacts
            fi
          echo ::endgroup::
